- name: Create ABIs dir
  file:
    path: "{{ base_path }}/skale-proxy/abi"
    state: directory

- name: Copy ABIs to proxy
  copy:
    src: "files/abi.json"
    dest: "{{ base_path }}/skale-proxy/data/abi.json"

- name: Remove existent .env content
  shell: "echo '' > {{ base_path }}/skale-proxy/network-ui/.env"

- name: Write variables to .env file for network-ui
  lineinfile:
    path: "{{ base_path }}/skale-proxy/network-ui/.env"
    insertbefore: BOF
    line: "{{ item.name }}={{ item.value }}"
  with_items:
    - { name: BASE_PROXY_URL, value: "{{ domain }}"}
    - { name: EXPLORER_URL, value: "{{ explorer_domain }}"}
    - { name: CHAIN_ID, value: "{{ chain_id }}"}
    - { name: NETWORK_NAME, value: "{{ network_name }}"}
    - { name: MAIN_WEBSITE_URL, value: "{{ main_website_url }}"}
    - { name: DOCS_WEBSITE_URL, value: "{{ docs_website_url }}"}
    - { name: NETWORKS, value: "{{ networks }}"}
    - { name: ABIS_URL, value: "{{ abis_url }}"}

- name: Copy Metaport config to proxy
  copy:
    src: "files/metaportConfig.json"
    dest: "{{ base_path }}/skale-proxy/network-ui/src/metaportConfig.json"

- name: Copy SSL certificate file (proxy)
  copy:
    src: "{{ base_path }}/ssl/{{ inventory_hostname }}/{{ item.src }}"
    dest: "{{ base_path }}/skale-proxy/data/{{ item.dest }}"
    remote_src: true
  loop:
    - { src: "fullchain.pem", dest: "server.crt" }
    - { src: "privkey.pem", dest: "server.key" }

- name: Update containers
  command: "docker-compose pull"
  args:
    chdir: "{{ base_path }}/skale-proxy"

- name: Build network-ui
  command: "bash build.sh"
  args:
    chdir: "{{ base_path }}/skale-proxy/network-ui"
  environment:
    NETWORK_NAME: "{{ network_name }}"

- name: Run proxy
  command: "bash scripts/run_proxy.sh"
  environment:
    BASE_PROXY_URL: "{{ domain }}"
    EXPLORER_URL: "{{ explorer_domain }}"
    CHAIN_ID: "{{ chain_id }}"
    NETWORK_NAME: "{{ network_name }}"
    MAIN_WEBSITE_URL: "{{ main_website_url }}"
    DOCS_WEBSITE_URL: "{{ docs_website_url }}"
    FIRST_SCHAIN_ID: "{{ groups['proxy'].index(inventory_hostname) * 100 }}"
    LAST_SCHAIN_ID: "{{ ( groups['proxy'].index(inventory_hostname) + 1) * 100 }}"
    PROXY_FULL_HOST_NAME: "{{ domain }}"
    ETH_ENDPOINT: "{{ eth_endpoint }}"
    NETWORKS: "{}"
    ABIS_URL: "{{ abis_url }}"
  args:
    chdir: "{{ base_path }}/skale-proxy"
